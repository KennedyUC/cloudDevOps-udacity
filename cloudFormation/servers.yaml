Description: >
  KenWeb template to deploy the servers and other resources for Udagram web application (Project 2).

  Udagram Server Infrastructure

######################################### Parameters ############################################################
Parameters:
  EnvironmentName:
    Description: Name prefixed to all the provisioned resources.
    Type: String
  ServerAMIId:
    Description: AMI ID for the provisioned EC2 instances.
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
  url:
    Type: String
    Description: Link to HTML to pull
    Default: https://raw.githubusercontent.com/KennedyUC/cloudDevOps-udacity/main/cloudFormation/udagram-web.zip

######################################## Resources ###############################################################
Resources:
  ##### Storage Bucket #####
  WebAppStorageBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: kennedy-udagram-bucket

  ##### Deploy web app config files to S3 bucket #####
  DeploymentCustomResource:
    Type: Custom::deploytos3
    Properties:
      ServiceToken: !GetAtt deploytos3.Arn
      url: !Ref url
      bucketname: Ref WebAppStorageBucket
  
  ##### Load Balancer Security Group #####
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress: #Allow inbound traffic on port 80
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: #Allow outbound traffic on port 80
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ##### Udagram App Servers Security Group #####
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress: #Allow inbound traffic on port 80 for accessing application and on port 22 for SSH in case of troubleshooting any issues.
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: # Allow outbound traffic on all ports to enable the download of updates or patches.
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  ##### EC2 servers IAM role #####
  S3BucketsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"

  ##### IAM Role Instance Profile #####
  S3BucketsInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: S3BucketsRole

  ##### S3 Bucket Policy #####
  S3BucketsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3BucketsPolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:*
            Resource: "*"
      Roles:
        - Ref: S3BucketsRole

  ##### Launch configuration that will be used when server will spin up #####
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://kennedy-udagram-bucket/udagram-web.zip .
          unzip -o udagram-web.zip
      ImageId: !Ref ServerAMIId
      SecurityGroups:
        - Ref: WebServerSecurityGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"

  ##### Udagram App Auto Scaling Group #####
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIVATE-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: "2"
      MaxSize: "4"
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  ##### Load balancer for public subnets with load balancer security group attached #####
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUBLIC-SN01"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUBLIC-SN02"
      SecurityGroups:
        - Ref: LBSecurityGroup

  ##### Load Balancer Listener #####
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: "80"
      Protocol: HTTP

  ##### Load Balancer Listner Rule #####
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "WebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1

  ##### Target Group #####
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

  ################################################## Outputs ###################################################
  Outputs:
    WebAppLBDNSName:
      Description: The website URL DNS name or Public URL of the Load Balancer.
      Value: !Join ["", ["http://", !GetAtt WebAppLB.DNSName]]
      Export:
        Name: !Sub ${EnvironmentName}-LB-DNSName